name: Lesson28 CI/CD

on:
  push:
    branches: [lesson28]
    paths:
      - "lesson28/hello-devops/**"
      - "lesson28/hello-jenkins/**"
      - "lesson28/hello-world/**"
  pull_request:
    branches: [lesson28]
    paths:
      - "lesson28/hello-devops/**"
      - "lesson28/hello-jenkins/**"
      - "lesson28/hello-world/**"

jobs:
  verify-structure:
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.check-structure.outputs.valid }}
    steps:
      - uses: actions/checkout@v4
      - name: Verify project structure
        id: check-structure
        run: |
          valid=true
          for app in hello-devops hello-jenkins hello-world; do
            if [ ! -f "lesson28/$app/Dockerfile" ]; then
              echo "Missing Dockerfile in lesson28/$app/"
              valid=false
            fi
            if [ ! -f "lesson28/$app/pom.xml" ]; then
              echo "Missing pom.xml in lesson28/$app/"
              valid=false
            fi
          done
          echo "::set-output name=valid::$valid"

  build_and_test:
    runs-on: ubuntu-latest
    needs: verify-structure
    if: needs.verify-structure.outputs.valid == 'true'
    strategy:
      matrix:
        app: [hello-devops, hello-jenkins, hello-world]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and test
        run: |
          cd "lesson28/${{ matrix.app }}"
          mvn -B package
          mvn test

  publish-job:
    runs-on: ubuntu-latest
    needs: build_and_test
    strategy:
      matrix:
        app: [hello-devops, hello-jenkins, hello-world]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      
      - name: Package without tests
        run: |
          cd "lesson28/${{ matrix.app }}"
          mvn -B package -DskipTests

      - name: Verify JAR file
        run: |
          ls -la "lesson28/${{ matrix.app }}/target/"
          test -f "lesson28/${{ matrix.app }}/target/"*.jar || exit 1

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-jar
          path: "lesson28/${{ matrix.app }}/target/*.jar"

  build-docker-image:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    needs: publish-job
    strategy:
      matrix:
        app: [hello-devops, hello-jenkins, hello-world]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.app }}-jar
          path: "lesson28/${{ matrix.app }}/target/"

      - name: Verify Dockerfile
        run: |
          ls -la "lesson28/${{ matrix.app }}/"
          test -f "lesson28/${{ matrix.app }}/Dockerfile" || exit 1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: "lesson28/${{ matrix.app }}"
          file: "lesson28/${{ matrix.app }}/Dockerfile"
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.app }}:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.app }}:${{ github.sha }}
