name: CI Pipeline

on:
  push:
    branches: [ lesson28 ]
  pull_request:
    branches: [ lesson28 ]

env:
  MAVEN_OPTS: -Dhttps.protocols=TLSv1.2
  MAVEN_VERSION: 3.9.6
  JAVA_VERSION: 17
  DOCKER_IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ['hello-world', 'hello-jenkins', 'hello-devops']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Set up Maven ${{ env.MAVEN_VERSION }}
      uses: s4u/setup-maven-action@v1
      with:
        maven-version: ${{ env.MAVEN_VERSION }}

    - name: Build and test ${{ matrix.app }}
      working-directory: lesson28/${{ matrix.app }}
      run: mvn -B package --file pom.xml

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.app }}-jar
        path: lesson28/${{ matrix.app }}/target/*.jar

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      working-directory: lesson28/${{ matrix.app }}
      run: |
        # Assume each app has a Dockerfile in its directory
        docker build -t ${{ env.DOCKER_IMAGE_PREFIX }}/${{ matrix.app }}:latest .
        docker push ${{ env.DOCKER_IMAGE_PREFIX }}/${{ matrix.app }}:latest
